{"version":3,"file":"static/js/499.6308b80a.chunk.js","mappings":"gLACA,GAAgB,QAAU,yBAAyB,MAAQ,uBAAuB,SAAW,0BAA0B,aAAe,8BAA8B,WAAa,6BCAjL,G,QAA4B,8B,mBCc5B,EAZiB,SAACA,GACd,OAII,gBAAKC,UAAWC,EAAgB,UAAC,SAAC,KAAO,CAACC,GAAI,YAAaH,EAAMI,SAAS,SAAEJ,EAAMK,QAM1F,ECbA,EAA4D,8BCM5D,EALgB,SAACL,GACb,OACI,gBAAKC,UAAWC,EAAmB,SAAEF,EAAMM,MAEnD,E,uCCQA,GAAeC,EAAAA,EAAAA,GAAU,CACrBC,KAAK,wBADT,EATuB,SAACR,GACpB,OACJ,kBAAMC,UAAWC,EAAAA,aAAoBO,SAAUT,EAAMU,aAAa,WAC9D,SAACC,EAAA,EAAK,CAACC,UAAWC,EAAAA,EAAUR,KAAK,qBAAqBS,SAAU,CAACC,EAAAA,GAAcC,EAAAA,EAAAA,GAAiB,QAEpF,SAACL,EAAA,EAAK,CAACC,UAAW,SAAWX,UAAWC,EAAAA,WAAiB,SAAC,WAG1E,ICmCA,EAvCgB,SAACF,GAGb,IAAIiB,EAAejB,EAAMkB,UAAUC,KAAK,SAAAC,GAAI,OAAG,SAAC,EAAQ,CAACf,KAAQe,EAAKf,KAAsBD,SAAYgB,EAAKC,IAA1BD,EAAKC,GAA2B,IAC/GC,EAAkBtB,EAAMuB,aAAaJ,KAAI,SAAAb,GAAI,OAAI,SAAC,EAAO,CAACA,KAAMA,EAAKkB,SAAgBlB,EAAKe,GAAc,IAM5G,OAEI,iBAAKpB,UAAWC,EAAAA,QAAc,WAE1B,iBAAKD,UAAWC,EAAAA,SAAe,WACnC,gBAAKD,UAAWC,EAAAA,MAAY,SAAC,YAE5Be,MAEG,iBAAKhB,UAAWC,EAAAA,KAAW,UAC1BoB,GACD,SAAC,EAAmB,CAACb,SAfV,SAACgB,GACpBzB,EAAM0B,eAAeD,EAASE,mBAE/B,SAiBH,E,8BCYG,GAAeC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KAPD,SAACC,GACtB,MAAM,CAACZ,UAAUY,EAAMC,QAAQb,UAC3BK,aAAaO,EAAMC,QAAQR,aAIhC,IAbsB,SAACS,GACtB,MAAM,CACFN,eAAgB,SAACC,GAAsBK,GAASC,EAAAA,EAAAA,GAAwBN,GAAoB,EAIjG,IASAO,EAAAA,EADA,CAECC,E","sources":["webpack://my_social_site/./src/components/Dialogs/dialogs.module.css?1969","webpack://my_social_site/./src/components/Dialogs/chat_item/chat_item.module.css?e446","components/Dialogs/chat_item/chat_item.jsx","webpack://my_social_site/./src/components/Dialogs/Message/message.module.css?6804","components/Dialogs/Message/message.jsx","components/Dialogs/AddMessageForm/addMessageForm.jsx","components/Dialogs/dialogs.jsx","components/Dialogs/dialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"dialogs_dialogs__1loor\",\"title\":\"dialogs_title__IjLUZ\",\"chatlist\":\"dialogs_chatlist__Z0BUm\",\"dialogwindow\":\"dialogs_dialogwindow__8cnUR\",\"sendButton\":\"dialogs_sendButton__9wcx2\"};","// extracted by mini-css-extract-plugin\nexport default {\"chat_item\":\"chat_item_chat_item__m-ufJ\"};","import style from \"./chat_item.module.css\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst ChatItem = (props) => {\r\n    return(\r\n        \r\n            \r\n        \r\n        <div className={style.chat_item}><NavLink to={'/Dialogs/'+ props.chat_num}>{props.name}</NavLink></div>\r\n \r\n\r\n            \r\n        \r\n    )\r\n}\r\nexport default ChatItem;","// extracted by mini-css-extract-plugin\nexport default {\"chat\":\"message_chat__mcDyH\",\"chat_message\":\"message_chat_message__q+is7\"};","import style from './message.module.css';\r\nimport React from \"react\";\r\nconst Message = (props) =>{\r\n    return(\r\n        <div className={style.chat_message}>{props.text}</div>\r\n    )\r\n}\r\nexport default Message","import { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControl/formsControl\";\r\nimport { requiredField,maxLengthCreator  } from \"../../../utils/validators/validators\";\r\nimport style from \"../dialogs.module.css\";\r\nimport React from \"react\";\r\nconst AddMessageForm = (props)=>{\r\n    return(\r\n<form className={style.dialogwindow} onSubmit={props.handleSubmit}>\r\n    <Field component={Textarea} name='newMessageDataText' validate={[requiredField,maxLengthCreator(50)]} ></Field>\r\n                {/* <textarea onChange = {messageOnChange} ref={windowMessageText} value={props.newMessageDataText}></textarea> */}\r\n                <Field component={'button'}  className={style.sendButton}>Send</Field>\r\n            </form>\r\n    )\r\n}\r\nexport default reduxForm({\r\n    form:'dialogAddMessageForm'\r\n})(AddMessageForm);","import style from \"./dialogs.module.css\";\r\nimport React from \"react\";\r\nimport ChatItem from \"./chat_item/chat_item\";\r\nimport Message from \"./Message/message\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControl/formsControl\";\r\nimport { requiredField,maxLengthCreator  } from \"../../utils/validators/validators\";\r\nimport  AddMessageFormRedux  from \"./AddMessageForm/addMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n   \r\n    \r\n    let newUsersData = props.usersData.map( data=> <ChatItem name = {data.name} key = {data.id} chat_num = {data.id} />);\r\n    let newMessagesData = props.messagesData.map(text => <Message text={text.message} key = {text.id}></Message>);\r\n    \r\n   let addNewMessage = (formData) =>{\r\n    props.addPostOnClick(formData.newMessageDataText);\r\n\r\n   }\r\n    return(\r\n        \r\n        <div className={style.dialogs}>\r\n\r\n            <div className={style.chatlist}>\r\n        <div className={style.title}>Dialogs</div>\r\n        \r\n        {newUsersData}\r\n            </div>\r\n            <div className={style.chat}>\r\n            {newMessagesData}\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            \r\n            </div>\r\n        </div>\r\n    ) \r\n};\r\n// const AddMessageForm = (props)=>{\r\n//     return(\r\n// <form className={style.dialogwindow} onSubmit={props.handleSubmit}>\r\n//     <Field component={Textarea} name='newMessageDataText' validate={[requiredField,maxLengthCreator(50)]} ></Field>\r\n//                 {/* <textarea onChange = {messageOnChange} ref={windowMessageText} value={props.newMessageDataText}></textarea> */}\r\n//                 <Field component={'button'}  className={style.sendButton}>Send</Field>\r\n//             </form>\r\n//     )\r\n// }\r\n// const AddMessageFormRedux = reduxForm({\r\n//     form:'dialogAddMessageForm'\r\n// })(AddMessageForm);\r\nexport default Dialogs;","\r\nimport { addMessageActionCreator } from \"../../redux/dialogs-reducer\";\r\n\r\nimport Dialogs from \"./dialogs\";\r\nimport withAuthRedirect from \"../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// const DialogsContainer = (props) => {\r\n\r\n    \r\n//  return <StoreContext.Consumer>\r\n//     { (store)=>{\r\n//             let messageOnChange = (text) =>{\r\n        \r\n//                 store.dispatch(newMessageDataTextActionCreator(text));\r\n//             };\r\n//             let addPostOnClick =()=>{\r\n//                 store.dispatch(addMessageActionCreator())\r\n//             };\r\n            \r\n//             let state = store.getState();\r\n           \r\n//         return <Dialogs addPostOnClick ={addPostOnClick} messageOnChange={messageOnChange}\r\n//         usersData={state.dialogs.usersData}\r\n//         messagesData={state.dialogs.messagesData}\r\n//         newMessageDataText={state.dialogs.newMessageDataText}\r\n//         />\r\n//         }\r\n//         }\r\n//         </StoreContext.Consumer>\r\n    \r\n// }\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        addPostOnClick :(newMessageDataText)=>{dispatch(addMessageActionCreator(newMessageDataText))},\r\n    \r\n         \r\n    }\r\n   }\r\n   let mapStateToProps = (state) =>{\r\n    return{usersData:state.dialogs.usersData,\r\n        messagesData:state.dialogs.messagesData,\r\n      \r\n        \r\n    }\r\n   }\r\n   export default compose(connect(mapStateToProps,mapDispatchToProps),\r\n   withAuthRedirect)\r\n   (Dialogs);\r\n//    let authRedirectComponent = withAuthRedirect(Dialogs)\r\n\r\n// const DialogsContainer =  connect(mapStateToProps,mapDispatchToProps)(authRedirectComponent);\r\n\r\n// export default DialogsContainer;"],"names":["props","className","style","to","chat_num","name","text","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","maxLengthCreator","newUsersData","usersData","map","data","id","newMessagesData","messagesData","message","formData","addPostOnClick","newMessageDataText","compose","connect","state","dialogs","dispatch","addMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}